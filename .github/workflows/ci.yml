name: CI

on:
  push:
    branches:
      - main
      - test/test-pipeline

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 'Build and Test'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Lint
      run: pnpm lint:ci

    - name: Test
      run: pnpm test

    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Login into the container registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: morico2302/teddy-api:${{ steps.generate_tag.outputs.sha }},morico2302/teddy-api:latest

    - name: Deploy to EC2
      if: success() && github.ref == 'refs/heads/main'
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" | base64 --decode > private_key.pem
        chmod 600 private_key.pem

        ssh -i private_key.pem $USER@$HOST << 'EOF'
          cd /home/ubuntu

          docker compose -f docker-compose.prod.yml down

          docker pull morico2302/teddy-api:latest
          
          docker compose -f docker-compose.prod.yml up -d --remove-orphans

          docker image prune -f
        EOF

        rm -f private_key.pem  # Remove a chave após o uso para segurança

    - name: Semantic Release
      if: success() && github.ref == 'refs/heads/main'
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}